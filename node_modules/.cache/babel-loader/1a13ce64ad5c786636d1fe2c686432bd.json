{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shreyapatel/Desktop/react-todo-app/src/components/wrappers/StateProvider.js\";\nimport React, { Component } from 'react';\nimport { FILTER_ALL } from '../../services/filter';\nimport { MODE_CREATE, MODE_NONE } from '../../services/mode';\nimport { objectWithOnly, wrapChildrenWith } from '../../util/common';\nimport { getAll, addToList, updateStatus } from '../../services/todo';\n\nclass StateProvider extends Component {\n  constructor() {\n    super();\n    this.state = {\n      query: '',\n      mode: MODE_CREATE,\n      filter: FILTER_ALL,\n      list: getAll()\n    };\n  }\n\n  render() {\n    let children = wrapChildrenWith(this.props.children, {\n      data: this.state,\n      actions: objectWithOnly(this, ['addNew', 'changeFilter', 'changeStatus', 'changeMode', 'setSearchQuery'])\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n\n  addNew(text) {\n    let updatedList = addToList(this.state.list, {\n      text,\n      completed: false\n    });\n    this.setState({\n      list: updatedList\n    });\n  }\n\n  changeFilter(filter) {\n    this.setState({\n      filter\n    });\n  }\n\n  changeStatus(itemId, completed) {\n    const updatedList = updateStatus(this.state.list, itemId, completed);\n    this.setState({\n      list: updatedList\n    });\n  }\n\n  changeMode(mode = MODE_NONE) {\n    this.setState({\n      mode\n    });\n  }\n\n  setSearchQuery(text) {\n    this.setState({\n      query: text || ''\n    });\n  }\n\n}\n\nexport default StateProvider;","map":{"version":3,"sources":["/Users/shreyapatel/Desktop/react-todo-app/src/components/wrappers/StateProvider.js"],"names":["React","Component","FILTER_ALL","MODE_CREATE","MODE_NONE","objectWithOnly","wrapChildrenWith","getAll","addToList","updateStatus","StateProvider","constructor","state","query","mode","filter","list","render","children","props","data","actions","addNew","text","updatedList","completed","setState","changeFilter","changeStatus","itemId","changeMode","setSearchQuery"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAR,QAAyB,uBAAzB;AACA,SAAQC,WAAR,EAAqBC,SAArB,QAAqC,qBAArC;AACA,SAAQC,cAAR,EAAwBC,gBAAxB,QAA+C,mBAA/C;AACA,SAAQC,MAAR,EAAgBC,SAAhB,EAA2BC,YAA3B,QAA8C,qBAA9C;;AAEA,MAAMC,aAAN,SAA4BT,SAA5B,CAAsC;AAClCU,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,IAAI,EAAEX,WAFG;AAGTY,MAAAA,MAAM,EAAEb,UAHC;AAITc,MAAAA,IAAI,EAAET,MAAM;AAJH,KAAb;AAMH;;AAEDU,EAAAA,MAAM,GAAG;AACL,QAAIC,QAAQ,GAAGZ,gBAAgB,CAAC,KAAKa,KAAL,CAAWD,QAAZ,EAAsB;AACjDE,MAAAA,IAAI,EAAE,KAAKR,KADsC;AAEjDS,MAAAA,OAAO,EAAEhB,cAAc,CAAC,IAAD,EAAO,CAAC,QAAD,EAAW,cAAX,EAA2B,cAA3B,EAA2C,YAA3C,EAAyD,gBAAzD,CAAP;AAF0B,KAAtB,CAA/B;AAKA,wBAAO;AAAA,gBAAMa;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAEDI,EAAAA,MAAM,CAACC,IAAD,EAAO;AACT,QAAIC,WAAW,GAAGhB,SAAS,CAAC,KAAKI,KAAL,CAAWI,IAAZ,EAAkB;AAACO,MAAAA,IAAD;AAAOE,MAAAA,SAAS,EAAE;AAAlB,KAAlB,CAA3B;AAEA,SAAKC,QAAL,CAAc;AAACV,MAAAA,IAAI,EAAEQ;AAAP,KAAd;AACH;;AAEDG,EAAAA,YAAY,CAACZ,MAAD,EAAS;AACjB,SAAKW,QAAL,CAAc;AAACX,MAAAA;AAAD,KAAd;AACH;;AAEDa,EAAAA,YAAY,CAACC,MAAD,EAASJ,SAAT,EAAoB;AAC5B,UAAMD,WAAW,GAAGf,YAAY,CAAC,KAAKG,KAAL,CAAWI,IAAZ,EAAkBa,MAAlB,EAA0BJ,SAA1B,CAAhC;AAEA,SAAKC,QAAL,CAAc;AAACV,MAAAA,IAAI,EAAEQ;AAAP,KAAd;AACH;;AAEDM,EAAAA,UAAU,CAAChB,IAAI,GAAGV,SAAR,EAAmB;AACzB,SAAKsB,QAAL,CAAc;AAACZ,MAAAA;AAAD,KAAd;AACH;;AAEDiB,EAAAA,cAAc,CAACR,IAAD,EAAO;AACjB,SAAKG,QAAL,CAAc;AAACb,MAAAA,KAAK,EAAEU,IAAI,IAAI;AAAhB,KAAd;AACH;;AA1CiC;;AA6CtC,eAAeb,aAAf","sourcesContent":["import React, {Component} from 'react';\nimport {FILTER_ALL} from '../../services/filter';\nimport {MODE_CREATE, MODE_NONE} from '../../services/mode';\nimport {objectWithOnly, wrapChildrenWith} from '../../util/common';\nimport {getAll, addToList, updateStatus} from '../../services/todo';\n\nclass StateProvider extends Component {\n    constructor() {\n        super();\n        this.state = {\n            query: '',\n            mode: MODE_CREATE,\n            filter: FILTER_ALL,\n            list: getAll()\n        }\n    }\n\n    render() {\n        let children = wrapChildrenWith(this.props.children, {\n            data: this.state,\n            actions: objectWithOnly(this, ['addNew', 'changeFilter', 'changeStatus', 'changeMode', 'setSearchQuery'])\n        });\n\n        return <div>{children}</div>;\n    }\n\n    addNew(text) {\n        let updatedList = addToList(this.state.list, {text, completed: false});\n\n        this.setState({list: updatedList});\n    }\n\n    changeFilter(filter) {\n        this.setState({filter});\n    }\n\n    changeStatus(itemId, completed) {\n        const updatedList = updateStatus(this.state.list, itemId, completed);\n\n        this.setState({list: updatedList});\n    }\n\n    changeMode(mode = MODE_NONE) {\n        this.setState({mode});\n    }\n\n    setSearchQuery(text) {\n        this.setState({query: text || ''});\n    }\n}\n\nexport default StateProvider;\n"]},"metadata":{},"sourceType":"module"}