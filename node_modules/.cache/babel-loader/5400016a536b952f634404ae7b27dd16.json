{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shreyapatel/Desktop/react-todo-app/src/components/wrappers/KeyStrokeHandler.js\";\nimport React, { Component } from 'react';\nimport { getNextModeByKey } from '../../services/mode';\nimport { wrapChildrenWith } from '../../util/common';\n\nclass KeyStrokeHandler extends Component {\n  componentWillMount() {\n    window.addEventListener('keydown', this.handleKeyUp.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyUp);\n  }\n\n  handleKeyUp(e) {\n    const {\n      mode\n    } = this.props.data;\n    const nextMode = getNextModeByKey(mode, e.keyCode);\n\n    if (nextMode !== mode) {\n      e.preventDefault();\n      this.props.actions.changeMode(nextMode);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: wrapChildrenWith(this.props.children, this.props)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default KeyStrokeHandler;","map":{"version":3,"sources":["/Users/shreyapatel/Desktop/react-todo-app/src/components/wrappers/KeyStrokeHandler.js"],"names":["React","Component","getNextModeByKey","wrapChildrenWith","KeyStrokeHandler","componentWillMount","window","addEventListener","handleKeyUp","bind","componentWillUnmount","removeEventListener","e","mode","props","data","nextMode","keyCode","preventDefault","actions","changeMode","render","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,gBAAR,QAA+B,qBAA/B;AACA,SAAQC,gBAAR,QAA+B,mBAA/B;;AAEA,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;AACrCI,EAAAA,kBAAkB,GAAG;AACjBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnC;AACH;;AAEDC,EAAAA,oBAAoB,GAAG;AACnBJ,IAAAA,MAAM,CAACK,mBAAP,CAA2B,SAA3B,EAAsC,KAAKH,WAA3C;AACH;;AAEDA,EAAAA,WAAW,CAACI,CAAD,EAAI;AACX,UAAM;AAACC,MAAAA;AAAD,QAAS,KAAKC,KAAL,CAAWC,IAA1B;AACA,UAAMC,QAAQ,GAAGd,gBAAgB,CAACW,IAAD,EAAOD,CAAC,CAACK,OAAT,CAAjC;;AAEA,QAAID,QAAQ,KAAKH,IAAjB,EAAuB;AACnBD,MAAAA,CAAC,CAACM,cAAF;AACA,WAAKJ,KAAL,CAAWK,OAAX,CAAmBC,UAAnB,CAA8BJ,QAA9B;AACH;AACJ;;AAEDK,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA,gBAAMlB,gBAAgB,CAAC,KAAKW,KAAL,CAAWQ,QAAZ,EAAsB,KAAKR,KAA3B;AAAtB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AArBoC;;AAwBzC,eAAeV,gBAAf","sourcesContent":["import React, {Component} from 'react';\nimport {getNextModeByKey} from '../../services/mode';\nimport {wrapChildrenWith} from '../../util/common';\n\nclass KeyStrokeHandler extends Component {\n    componentWillMount() {\n        window.addEventListener('keydown', this.handleKeyUp.bind(this));\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.handleKeyUp);\n    }\n\n    handleKeyUp(e) {\n        const {mode} = this.props.data;\n        const nextMode = getNextModeByKey(mode, e.keyCode);\n\n        if (nextMode !== mode) {\n            e.preventDefault();\n            this.props.actions.changeMode(nextMode);\n        }\n    }\n\n    render() {\n        return <div>{wrapChildrenWith(this.props.children, this.props)}</div>;\n    }\n}\n\nexport default KeyStrokeHandler;\n"]},"metadata":{},"sourceType":"module"}