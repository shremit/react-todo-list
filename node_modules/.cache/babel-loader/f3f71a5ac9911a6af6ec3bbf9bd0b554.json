{"ast":null,"code":"import React from 'react';\n/**\n * Returns a new object with only few attributes of the original object.\n * Note: the attributes/properties will still be bound to the old object.\n *\n * @param  {Object} object     The object.\n * @param  {Array}             Array of selected attributes.\n * @return {Object}            New object with only the selected attributes.\n */\n\nexport function objectWithOnly(object, attrs) {\n  let newObject = {};\n  attrs.forEach(attr => {\n    newObject[attr] = object[attr].bind(object);\n  });\n  return newObject;\n}\n/**\n * Wraps react children elements with props.\n */\n\nexport function wrapChildrenWith(children, props) {\n  return React.Children.map(children, child => /*#__PURE__*/React.cloneElement(child, props));\n}\n/**\n * Checks if the string includes the substring.\n *\n * @param  {String} str\n * @param  {String} substr\n * @return {Boolean}\n */\n\nexport function stringInclues(str, substr) {\n  return str.indexOf(substr) !== -1;\n}","map":{"version":3,"sources":["/Users/shreyapatel/Desktop/react-todo-app/src/util/common.js"],"names":["React","objectWithOnly","object","attrs","newObject","forEach","attr","bind","wrapChildrenWith","children","props","Children","map","child","cloneElement","stringInclues","str","substr","indexOf"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,cAAT,CAAwBC,MAAxB,EAAgCC,KAAhC,EAAuC;AAC1C,MAAIC,SAAS,GAAG,EAAhB;AAEAD,EAAAA,KAAK,CAACE,OAAN,CAAcC,IAAI,IAAI;AAClBF,IAAAA,SAAS,CAACE,IAAD,CAAT,GAAkBJ,MAAM,CAACI,IAAD,CAAN,CAAaC,IAAb,CAAkBL,MAAlB,CAAlB;AACH,GAFD;AAIA,SAAOE,SAAP;AACH;AAED;AACA;AACA;;AACA,OAAO,SAASI,gBAAT,CAA0BC,QAA1B,EAAoCC,KAApC,EAA2C;AAC9C,SAAOV,KAAK,CAACW,QAAN,CAAeC,GAAf,CAAmBH,QAAnB,EAA6BI,KAAK,iBAAIb,KAAK,CAACc,YAAN,CAAmBD,KAAnB,EAA0BH,KAA1B,CAAtC,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASK,aAAT,CAAuBC,GAAvB,EAA4BC,MAA5B,EAAoC;AACvC,SAAOD,GAAG,CAACE,OAAJ,CAAYD,MAAZ,MAAwB,CAAC,CAAhC;AACH","sourcesContent":["import React from 'react';\n\n/**\n * Returns a new object with only few attributes of the original object.\n * Note: the attributes/properties will still be bound to the old object.\n *\n * @param  {Object} object     The object.\n * @param  {Array}             Array of selected attributes.\n * @return {Object}            New object with only the selected attributes.\n */\nexport function objectWithOnly(object, attrs) {\n    let newObject = {};\n\n    attrs.forEach(attr => {\n        newObject[attr] = object[attr].bind(object);\n    });\n\n    return newObject;\n}\n\n/**\n * Wraps react children elements with props.\n */\nexport function wrapChildrenWith(children, props) {\n    return React.Children.map(children, child => React.cloneElement(child, props));\n}\n\n/**\n * Checks if the string includes the substring.\n *\n * @param  {String} str\n * @param  {String} substr\n * @return {Boolean}\n */\nexport function stringInclues(str, substr) {\n    return str.indexOf(substr) !== -1;\n}\n"]},"metadata":{},"sourceType":"module"}